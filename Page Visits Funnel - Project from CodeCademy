import codecademylib
import pandas as pd

visits = pd.read_csv('visits.csv',
                     parse_dates=[1])
cart = pd.read_csv('cart.csv',
                   parse_dates=[1])
checkout = pd.read_csv('checkout.csv',
                       parse_dates=[1])
purchase = pd.read_csv('purchase.csv',
                       parse_dates=[1])

print(visits.head())
print(cart.head())
print(checkout.head())
print(purchase.head())

#merging the visits with the cart information
visits_to_cart = pd.merge(
  visits,
  cart,
  how = "left"
)

print(visits_to_cart.head())
print(len(visits_to_cart))
print(len(visits_to_cart[visits_to_cart.cart_time.isnull()]))

#finds the percentage of people visiting the page but not proceeding to checkout
percentage_not_order = float(len(checkout)) / len(visits) * 100
print(percentage_not_order)

#merging cart info with checkout info
cart_to_checkout = pd.merge(
  cart,
  checkout,
  how = "left"
)

#percentage of people adding an item to the cart but not proceeding to checkout
percentage_cart_not_checkout = float(len(cart_to_checkout[cart_to_checkout.checkout_time.isnull()])) / len(cart) * 100
print(percentage_cart_not_checkout)

#merge all the information into variable all_data
#could have dropped the first merge here and just do a triple merge: dataframe1.merge(dataframe2, how="left").merge(dataframe2, how="left").merge(dataframe3, how="left")
vi_ca_ch = pd.merge(
  visits_to_cart,
  checkout,
  how = "left"
)
print(vi_ca_ch.head())

all_data = pd.merge(
  vi_ca_ch,
  purchase,
  how = "left"
)
print(all_data.head())

#finds the percentage of people going to checkout but not purchasing
num_check = float(len(checkout))
num_purchase = float(len(purchase))
percentage_check_not_purchase = 100 -  (num_purchase / num_check * 100)
print(percentage_check_not_purchase)


#finds every customer's time from visiting the page to finishing the purchase
all_data["time_to_purchase"] = all_data.purchase_time - all_data.visit_time
#print(all_data.time_to_purchase)

#finding average time to purchase
average_purchase_time = all_data.time_to_purchase.mean()
print(average_purchase_time)
